// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
} from "@hey-api/client-fetch";
import type {
  ArticlesListData,
  ArticlesListError,
  ArticlesListResponse,
  ArticlesRetrieveData,
  ArticlesRetrieveError,
  ArticlesRetrieveResponse,
  BlogsListData,
  BlogsListError,
  BlogsListResponse,
  BlogsRetrieveData,
  BlogsRetrieveError,
  BlogsRetrieveResponse,
  InfoRetrieveError,
  InfoRetrieveResponse,
  ReportsListData,
  ReportsListError,
  ReportsListResponse,
  ReportsRetrieveData,
  ReportsRetrieveError,
  ReportsRetrieveResponse,
} from "./types.gen";

export const client = createClient(createConfig());

export const articlesList = <ThrowOnError extends boolean = false>(
  options?: Options<ArticlesListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ArticlesListResponse,
    ArticlesListError,
    ThrowOnError
  >({
    ...options,
    url: "/v4/articles/",
  });
};

export const articlesRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<ArticlesRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ArticlesRetrieveResponse,
    ArticlesRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: "/v4/articles/{id}/",
  });
};

export const blogsList = <ThrowOnError extends boolean = false>(
  options?: Options<BlogsListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    BlogsListResponse,
    BlogsListError,
    ThrowOnError
  >({
    ...options,
    url: "/v4/blogs/",
  });
};

export const blogsRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<BlogsRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    BlogsRetrieveResponse,
    BlogsRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: "/v4/blogs/{id}/",
  });
};

export const infoRetrieve = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    InfoRetrieveResponse,
    InfoRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: "/v4/info/",
  });
};

export const reportsList = <ThrowOnError extends boolean = false>(
  options?: Options<ReportsListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReportsListResponse,
    ReportsListError,
    ThrowOnError
  >({
    ...options,
    url: "/v4/reports/",
  });
};

export const reportsRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<ReportsRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReportsRetrieveResponse,
    ReportsRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: "/v4/reports/{id}/",
  });
};
